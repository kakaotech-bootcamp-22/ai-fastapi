# ai-server.yaml
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ai-server-config
data:
  MODEL_PATH: "/app/models"
  LOG_LEVEL: "INFO"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ai-server
  template:
    metadata:
      labels:
        app: ai-server
    spec:
      nodeSelector:
        node-group: ai-workload
      containers:
      - name: fastapi
        image: {your-aws-account}.dkr.ecr.{region}.amazonaws.com/ai-server:latest
        ports:
        - containerPort: 8000
        resources:
          requests:
            cpu: "1"
            memory: "2Gi"
          limits:
            cpu: "2"
            memory: "4Gi"
        env:
        - name: MODEL_PATH
          valueFrom:
            configMapKeyRef:
              name: ai-server-config
              key: MODEL_PATH
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: ai-server-config
              key: LOG_LEVEL
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 30
        volumeMounts:
        - name: model-storage
          mountPath: /app/models
      volumes:
      - name: model-storage
        persistentVolumeClaim:
          claimName: ai-model-pvc

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ai-model-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
apiVersion: v1
kind: Service
metadata:
  name: ai-server-service
spec:
  selector:
    app: ai-server
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
  type: ClusterIP